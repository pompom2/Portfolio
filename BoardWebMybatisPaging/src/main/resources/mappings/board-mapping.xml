<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
1. parameterType="board" -> 생략 가능
2. resultType="board" -> select에서 사용(필수)
3. resultType의 문제점
- join 구문을 포함할 때는 사용 불가
- 자바 객체의 프로퍼티명과 테이블의 컬럼명이 일치하지 않을 때는 사용 불가
4. resultType 대신 resultMap을 사용하여 위의 문제 해결 가능
- result러 property와 column 매핑
- PK는 result 대신에 id를 사용할 수 있음

5. mapper 파일에서 SQL문을 사용했을 때의 문제점
- >, < 연산자를 태그로 인식하는 문제
- CDATA section을 사용, Charactor DATA

6. Dynamic SQL
- SQL에서 선택적으로 실행할 내용을 구현하기 위해서 Mybatis에서 사용하는 문법
- CDATA와 함께 사용할 수 없음
 -->
						
<mapper namespace="BoardDAO">
	<resultMap type="board" id="boardResult">
		<id property="seq" column="seq"/>
		<result property="title" column="title"/>
		<result property="writer" column="writer"/>
		<result property="content" column="content"/>
		<result property="regdate" column="regdate"/>
	</resultMap>

	<insert id="insertBoard">
		<![CDATA[
		insert into board(seq, title, writer, content) values (board_seq.nextval, #{title}, #{writer}, #{content})
		]]>
	</insert>
	
	<update id="updateBoard">
		<![CDATA[
		update board set title=#{title}, content=#{content}, writer=#{writer} where seq=#{seq}
		]]>
	</update>
	
	<update id="updateBoardCnt">
		<![CDATA[
		update board set cnt=cnt+1 where seq=#{seq}
		]]>
	</update>
	
	<!-- 글 번호에 의한 삭제 -->
	<delete id="deleteBoard">
		<![CDATA[
		delete board where seq=#{seq}
		]]>
	</delete>
	
	<!-- 회원 탈퇴에 대한 회원 글 전제 삭제 트랜잭션 처리 -->
	<delete id="deleteBoardById">
		<![CDATA[
		delete board where writer=#{writer}
		]]>
	</delete>
	
	<select id="getBoard" resultMap="boardResult">
		<![CDATA[
		select * from board where seq=#{seq}
		]]>
	</select>
	
	<!-- 게시판 전체보기, 검색, 페이징 -->
	<!-- Dynamic SQL -->
	<select id="getBoardList" parameterType="Map" resultMap="boardResult">
		<![CDATA[
		select * from (
			select b.*, row_number() over(order by seq desc) as rnum from board b
			where 1 = 1
		]]>
		<if test="board.searchCondition == 'TITLE'">
		and title like '%'||#{board.searchKeyword}||'%'
		</if>
		<if test="board.searchCondition == 'CONTENT'">
		and content like '%'||#{board.searchKeyword}||'%'
		</if>
		<if test="board.searchCondition == 'WRITER'">
		and writer like '%'||#{board.searchKeyword}||'%'
		</if>
		<![CDATA[
		) where rnum >= ((#{block.pageNum}-1) * #{block.amount} +1) and (rnum <= #{block.pageNum} * #{block.amount})
		]]> 
	</select>
	
	<!-- <![CDATA[
		select * from (
			select b.*, row_number() over(order by seq desc) as rnum from board b
		) where rnum >= ((#{block.pageNum}-1) * #{block.amount} +1) and (rnum <= #{block.pageNum} * #{block.amount})
		]]>
	
		<if test="board.searchCondition == 'TITLE'">
		and title like '%'||#{board.searchKeyword}||'%'
		</if>
		<if test="board.searchCondition == 'CONTENT'">
		and content like '%'||#{board.searchKeyword}||'%'
		</if>
		<if test="board.searchCondition == 'WRITER'">
		and writer like '%'||#{board.searchKeyword}||'%'
		</if> -->	
	
		
	<!-- 페이징에서 전체 페이지 수를 구함 -->
	<select id="getBoardListCount" resultType="int">
		select count(*) from board
		where 1 = 1
		<if test="searchCondition == 'TITLE'">
		and title like '%'||#{searchKeyword}||'%'
		</if>
		<if test="searchCondition == 'CONTENT'">
		and content like '%'||#{searchKeyword}||'%'
		</if>
		<if test="searchCondition == 'WRITER'">
		and writer like '%'||#{searchKeyword}||'%'
		</if>
		order by regdate desc
	</select>
	
	<!-- <select id="getBoardList_T" resultMap="boardResult">
		<![CDATA[
		select * from board
		where title like '%'||#{searchKeyword}||'%'
		order by seq desc
		]]>
	</select>
	
	<select id="getBoardList_C" resultMap="boardResult">
		<![CDATA[
		select * from board
		where content like '%'||#{searchKeyword}||'%'
		order by seq desc
		]]>
	</select>
	
	<select id="getBoardList_W" resultMap="boardResult">
		<![CDATA[
		select * from board
		where writer like '%'||#{searchKeyword}||'%'
		order by seq desc
		]]>
	</select> -->
</mapper>